{"filter":false,"title":"password_resets_controller.rb","tooltip":"/sample_app/app/controllers/password_resets_controller.rb","undoManager":{"mark":15,"position":15,"stack":[[{"start":{"row":0,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["class PasswordResetsController < ApplicationController","  def new","  end","","  def edit","  end","end",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":20,"column":3},"action":"insert","lines":["class PasswordResetsController < ApplicationController","","  def new","  end","","  def create","    @user = User.find_by(email: params[:password_reset][:email].downcase)","    if @user","      @user.create_reset_digest","      @user.send_password_reset_email","      flash[:info] = \"Email sent with password reset instructions\"","      redirect_to root_url","    else","      flash.now[:danger] = \"Email address not found\"","      render 'new'","    end","  end","","  def edit","  end","end"]}],[{"start":{"row":19,"column":5},"end":{"row":20,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":20,"column":0},"end":{"row":20,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":20,"column":2},"end":{"row":21,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":21,"column":0},"end":{"row":21,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":21,"column":2},"end":{"row":33,"column":7},"action":"insert","lines":["  private","","    def get_user","      @user = User.find_by(email: params[:email])","    end","","    # Confirms a valid user.","    def valid_user","      unless (@user && @user.activated? &&","              @user.authenticated?(:reset, params[:id]))","        redirect_to root_url","      end","    end"],"id":5}],[{"start":{"row":33,"column":1},"end":{"row":33,"column":3},"action":"remove","lines":["  "],"id":9},{"start":{"row":32,"column":1},"end":{"row":32,"column":3},"action":"remove","lines":["  "]},{"start":{"row":31,"column":1},"end":{"row":31,"column":3},"action":"remove","lines":["  "]},{"start":{"row":30,"column":1},"end":{"row":30,"column":3},"action":"remove","lines":["  "]},{"start":{"row":29,"column":1},"end":{"row":29,"column":3},"action":"remove","lines":["  "]},{"start":{"row":28,"column":1},"end":{"row":28,"column":3},"action":"remove","lines":["  "]},{"start":{"row":27,"column":1},"end":{"row":27,"column":3},"action":"remove","lines":["  "]},{"start":{"row":25,"column":1},"end":{"row":25,"column":3},"action":"remove","lines":["  "]},{"start":{"row":24,"column":1},"end":{"row":24,"column":3},"action":"remove","lines":["  "]},{"start":{"row":23,"column":1},"end":{"row":23,"column":3},"action":"remove","lines":["  "]},{"start":{"row":21,"column":1},"end":{"row":21,"column":3},"action":"remove","lines":["  "]}],[{"start":{"row":25,"column":1},"end":{"row":25,"column":2},"action":"remove","lines":[" "],"id":12},{"start":{"row":25,"column":1},"end":{"row":25,"column":2},"action":"insert","lines":[" "]},{"start":{"row":24,"column":1},"end":{"row":24,"column":2},"action":"remove","lines":[" "]},{"start":{"row":24,"column":1},"end":{"row":24,"column":2},"action":"insert","lines":[" "]},{"start":{"row":23,"column":1},"end":{"row":23,"column":2},"action":"remove","lines":[" "]},{"start":{"row":23,"column":1},"end":{"row":23,"column":2},"action":"insert","lines":[" "]}],[{"start":{"row":25,"column":2},"end":{"row":25,"column":3},"action":"insert","lines":[" "],"id":13},{"start":{"row":24,"column":2},"end":{"row":24,"column":3},"action":"insert","lines":[" "]},{"start":{"row":23,"column":2},"end":{"row":23,"column":3},"action":"insert","lines":[" "]}],[{"start":{"row":25,"column":3},"end":{"row":25,"column":4},"action":"insert","lines":[" "],"id":14},{"start":{"row":24,"column":3},"end":{"row":24,"column":4},"action":"insert","lines":[" "]},{"start":{"row":23,"column":3},"end":{"row":23,"column":4},"action":"insert","lines":[" "]}],[{"start":{"row":33,"column":0},"end":{"row":33,"column":1},"action":"remove","lines":[" "],"id":15},{"start":{"row":33,"column":0},"end":{"row":33,"column":1},"action":"insert","lines":[" "]},{"start":{"row":32,"column":0},"end":{"row":32,"column":1},"action":"remove","lines":[" "]},{"start":{"row":32,"column":0},"end":{"row":32,"column":1},"action":"insert","lines":[" "]},{"start":{"row":31,"column":0},"end":{"row":31,"column":1},"action":"remove","lines":[" "]},{"start":{"row":31,"column":0},"end":{"row":31,"column":1},"action":"insert","lines":[" "]},{"start":{"row":30,"column":0},"end":{"row":30,"column":1},"action":"remove","lines":[" "]},{"start":{"row":30,"column":0},"end":{"row":30,"column":1},"action":"insert","lines":[" "]},{"start":{"row":29,"column":0},"end":{"row":29,"column":1},"action":"remove","lines":[" "]},{"start":{"row":29,"column":0},"end":{"row":29,"column":1},"action":"insert","lines":[" "]},{"start":{"row":28,"column":0},"end":{"row":28,"column":1},"action":"remove","lines":[" "]},{"start":{"row":28,"column":0},"end":{"row":28,"column":1},"action":"insert","lines":[" "]},{"start":{"row":27,"column":0},"end":{"row":27,"column":1},"action":"remove","lines":[" "]},{"start":{"row":27,"column":0},"end":{"row":27,"column":1},"action":"insert","lines":[" "]}],[{"start":{"row":33,"column":1},"end":{"row":33,"column":2},"action":"insert","lines":[" "],"id":16},{"start":{"row":32,"column":1},"end":{"row":32,"column":2},"action":"insert","lines":[" "]},{"start":{"row":31,"column":1},"end":{"row":31,"column":2},"action":"insert","lines":[" "]},{"start":{"row":30,"column":1},"end":{"row":30,"column":2},"action":"insert","lines":[" "]},{"start":{"row":29,"column":1},"end":{"row":29,"column":2},"action":"insert","lines":[" "]},{"start":{"row":28,"column":1},"end":{"row":28,"column":2},"action":"insert","lines":[" "]},{"start":{"row":27,"column":1},"end":{"row":27,"column":2},"action":"insert","lines":[" "]}],[{"start":{"row":33,"column":2},"end":{"row":33,"column":3},"action":"insert","lines":[" "],"id":17},{"start":{"row":32,"column":2},"end":{"row":32,"column":3},"action":"insert","lines":[" "]},{"start":{"row":31,"column":2},"end":{"row":31,"column":3},"action":"insert","lines":[" "]},{"start":{"row":30,"column":2},"end":{"row":30,"column":3},"action":"insert","lines":[" "]},{"start":{"row":29,"column":2},"end":{"row":29,"column":3},"action":"insert","lines":[" "]},{"start":{"row":28,"column":2},"end":{"row":28,"column":3},"action":"insert","lines":[" "]},{"start":{"row":27,"column":2},"end":{"row":27,"column":3},"action":"insert","lines":[" "]}],[{"start":{"row":0,"column":54},"end":{"row":2,"column":51},"action":"insert","lines":["","  before_action :get_user,   only: [:edit, :update]","  before_action :valid_user, only: [:edit, :update]"],"id":18}],[{"start":{"row":0,"column":0},"end":{"row":36,"column":3},"action":"remove","lines":["class PasswordResetsController < ApplicationController","  before_action :get_user,   only: [:edit, :update]","  before_action :valid_user, only: [:edit, :update]","","  def new","  end","","  def create","    @user = User.find_by(email: params[:password_reset][:email].downcase)","    if @user","      @user.create_reset_digest","      @user.send_password_reset_email","      flash[:info] = \"Email sent with password reset instructions\"","      redirect_to root_url","    else","      flash.now[:danger] = \"Email address not found\"","      render 'new'","    end","  end","","  def edit","  end","  ","  private","","    def get_user","      @user = User.find_by(email: params[:email])","    end","","    # Confirms a valid user.","    def valid_user","      unless (@user && @user.activated? &&","              @user.authenticated?(:reset, params[:id]))","        redirect_to root_url","      end","    end","end"],"id":19},{"start":{"row":0,"column":0},"end":{"row":64,"column":3},"action":"insert","lines":["class PasswordResetsController < ApplicationController","  before_action :get_user,         only: [:edit, :update]","  before_action :valid_user,       only: [:edit, :update]","  before_action :check_expiration, only: [:edit, :update]    # Case (1)","","  def new","  end","","  def create","    @user = User.find_by(email: params[:password_reset][:email].downcase)","    if @user","      @user.create_reset_digest","      @user.send_password_reset_email","      flash[:info] = \"Email sent with password reset instructions\"","      redirect_to root_url","    else","      flash.now[:danger] = \"Email address not found\"","      render 'new'","    end","  end","","  def edit","  end","","  def update","    if params[:user][:password].empty?                  # Case (3)","      @user.errors.add(:password, \"can't be empty\")","      render 'edit'","    elsif @user.update_attributes(user_params)          # Case (4)","      log_in @user","      flash[:success] = \"Password has been reset.\"","      redirect_to @user","    else","      render 'edit'                                     # Case (2)","    end","  end","","  private","","    def user_params","      params.require(:user).permit(:password, :password_confirmation)","    end","","    # Before filters","","    def get_user","      @user = User.find_by(email: params[:email])","    end","","    # Confirms a valid user.","    def valid_user","      unless (@user && @user.activated? &&","              @user.authenticated?(:reset, params[:id]))","        redirect_to root_url","      end","    end","","    # Checks expiration of reset token.","    def check_expiration","      if @user.password_reset_expired?","        flash[:danger] = \"Password reset has expired.\"","        redirect_to new_password_reset_url","      end","    end","end"]}],[{"start":{"row":23,"column":0},"end":{"row":36,"column":0},"action":"remove","lines":["","  def update","    if params[:user][:password].empty?                  # Case (3)","      @user.errors.add(:password, \"can't be empty\")","      render 'edit'","    elsif @user.update_attributes(user_params)          # Case (4)","      log_in @user","      flash[:success] = \"Password has been reset.\"","      redirect_to @user","    else","      render 'edit'                                     # Case (2)","    end","  end",""],"id":20},{"start":{"row":23,"column":0},"end":{"row":35,"column":5},"action":"insert","lines":["  def update","    if params[:user][:password].empty?","      @user.errors.add(:password, \"can't be empty\")","      render 'edit'","    elsif @user.update_attributes(user_params)","      log_in @user","      @user.update_attribute(:reset_digest, nil)","      flash[:success] = \"Password has been reset.\"","      redirect_to @user","    else","      render 'edit'","    end","  end"]}],[{"start":{"row":35,"column":5},"end":{"row":36,"column":0},"action":"insert","lines":["",""],"id":21},{"start":{"row":36,"column":0},"end":{"row":36,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":23,"column":2},"end":{"row":24,"column":0},"action":"insert","lines":["",""],"id":22},{"start":{"row":24,"column":0},"end":{"row":24,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":30,"column":48},"end":{"row":31,"column":48},"action":"insert","lines":["","      @user.update_attribute(:reset_digest, nil)"],"id":24}]]},"ace":{"folds":[],"scrolltop":306.5,"scrollleft":0,"selection":{"start":{"row":30,"column":48},"end":{"row":30,"column":48},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":66,"mode":"ace/mode/ruby"}},"timestamp":1480902233682,"hash":"8d86f9f4ed7f0d759ed5e26c5bcd164e3b09411d"}