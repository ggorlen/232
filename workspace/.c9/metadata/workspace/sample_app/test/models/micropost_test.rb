{"filter":false,"title":"micropost_test.rb","tooltip":"/sample_app/test/models/micropost_test.rb","undoManager":{"mark":19,"position":19,"stack":[[{"start":{"row":0,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["require 'test_helper'","","class MicropostTest < ActiveSupport::TestCase","  # test \"the truth\" do","  #   assert true","  # end","end",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":18,"column":3},"action":"insert","lines":["require 'test_helper'","","class MicropostTest < ActiveSupport::TestCase","","  def setup","    @user = users(:michael)","    # This code is not idiomatically correct.","    @micropost = Micropost.new(content: \"Lorem ipsum\", user_id: @user.id)","  end","","  test \"should be valid\" do","    assert @micropost.valid?","  end","","  test \"user id should be present\" do","    @micropost.user_id = nil","    assert_not @micropost.valid?","  end","end"]}],[{"start":{"row":0,"column":0},"end":{"row":18,"column":3},"action":"remove","lines":["require 'test_helper'","","class MicropostTest < ActiveSupport::TestCase","","  def setup","    @user = users(:michael)","    # This code is not idiomatically correct.","    @micropost = Micropost.new(content: \"Lorem ipsum\", user_id: @user.id)","  end","","  test \"should be valid\" do","    assert @micropost.valid?","  end","","  test \"user id should be present\" do","    @micropost.user_id = nil","    assert_not @micropost.valid?","  end","end"],"id":3},{"start":{"row":0,"column":0},"end":{"row":27,"column":3},"action":"insert","lines":["require 'test_helper'","","class MicropostTest < ActiveSupport::TestCase","","  def setup","    @user = users(:michael)","    @micropost = Micropost.new(content: \"Lorem ipsum\", user_id: @user.id)","  end","","  test \"should be valid\" do","    assert @micropost.valid?","  end","","  test \"user id should be present\" do","    @micropost.user_id = nil","    assert_not @micropost.valid?","  end","","  test \"content should be present\" do","    @micropost.content = \"   \"","    assert_not @micropost.valid?","  end","","  test \"content should be at most 140 characters\" do","    @micropost.content = \"a\" * 141","    assert_not @micropost.valid?","  end","end"]}],[{"start":{"row":5,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["    @user = users(:michael)","    @micropost = Micropost.new(content: \"Lorem ipsum\", user_id: @user.id)",""],"id":4},{"start":{"row":5,"column":0},"end":{"row":7,"column":1},"action":"insert","lines":["@user = users(:michael)","@micropost = @user.microposts.build(content: \"Lorem ipsum\")","("]}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":1},"action":"remove","lines":["("],"id":5}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":1},"action":"insert","lines":[" "],"id":6}],[{"start":{"row":6,"column":1},"end":{"row":6,"column":2},"action":"insert","lines":[" "],"id":7}],[{"start":{"row":6,"column":2},"end":{"row":6,"column":3},"action":"insert","lines":[" "],"id":8}],[{"start":{"row":6,"column":3},"end":{"row":6,"column":4},"action":"insert","lines":[" "],"id":9}],[{"start":{"row":5,"column":0},"end":{"row":5,"column":1},"action":"insert","lines":[" "],"id":10}],[{"start":{"row":5,"column":1},"end":{"row":5,"column":2},"action":"insert","lines":[" "],"id":11}],[{"start":{"row":5,"column":2},"end":{"row":5,"column":3},"action":"insert","lines":[" "],"id":12}],[{"start":{"row":5,"column":3},"end":{"row":5,"column":4},"action":"insert","lines":[" "],"id":13}],[{"start":{"row":5,"column":27},"end":{"row":6,"column":63},"action":"remove","lines":["","    @micropost = @user.microposts.build(content: \"Lorem ipsum\")"],"id":14},{"start":{"row":5,"column":27},"end":{"row":6,"column":63},"action":"insert","lines":["","    @micropost = @user.microposts.build(content: \"Lorem ipsum\")"]}],[{"start":{"row":16,"column":5},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":15},{"start":{"row":17,"column":0},"end":{"row":17,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":17,"column":2},"end":{"row":18,"column":0},"action":"insert","lines":["",""],"id":16},{"start":{"row":18,"column":0},"end":{"row":18,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":18,"column":2},"end":{"row":20,"column":5},"action":"insert","lines":["  test \"order should be most recent first\" do","    assert_equal microposts(:most_recent), Micropost.first","  end"],"id":17}],[{"start":{"row":18,"column":2},"end":{"row":18,"column":4},"action":"remove","lines":["  "],"id":18}],[{"start":{"row":30,"column":5},"end":{"row":31,"column":0},"action":"insert","lines":["",""],"id":19},{"start":{"row":31,"column":0},"end":{"row":31,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":31,"column":2},"end":{"row":37,"column":5},"action":"insert","lines":["test \"associated microposts should be destroyed\" do","    @user.save","    @user.microposts.create!(content: \"Lorem ipsum\")","    assert_difference 'Micropost.count', -1 do","      @user.destroy","    end","  end"],"id":20}],[{"start":{"row":30,"column":5},"end":{"row":31,"column":0},"action":"insert","lines":["",""],"id":21},{"start":{"row":31,"column":0},"end":{"row":31,"column":2},"action":"insert","lines":["  "]}]]},"ace":{"folds":[],"scrolltop":295,"scrollleft":0,"selection":{"start":{"row":39,"column":3},"end":{"row":39,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":18,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1481095228112,"hash":"1817ba2a083fb7f9ca7961f9cdd90c87d6077e1d"}